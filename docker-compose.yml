---
version: "3.9"
services:
  traefik:
    image: "traefik:v3.0"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytailscale.tailscale=true"
      - "--certificatesresolvers.myLE.acme.email=thomas@blarre.net"
      - "--certificatesresolvers.myLE.acme.storage=acme.json"
      - "--certificatesresolvers.myLE.acme.tlschallenge=true"
    ports:
      - "8080:8080"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/var/run/tailscale/tailscaled.sock:/var/run/tailscale/tailscaled.sock"

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./transmission:/config
      - ${DATA_ROOT}/torrents:/data/torrents
    restart: unless-stopped
    depends_on: 
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.transmission.rule=Host(`$TAILSCALE_HOSTNAME`) && PathPrefix(`/transmission`)
      - traefik.http.routers.transmission.tls.certresolver=myresolver
      - traefik.http.services.transmission.loadbalancer.server.port=9091

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./radarr:/config
      - ${DATA_ROOT}:/data
    restart: unless-stopped
    depends_on:
      - traefik
      - transmission
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`$TAILSCALE_HOSTNAME`) && PathPrefix(`/radarr`)
      - traefik.http.routers.radarr.tls.certresolver=mytailscale
      - traefik.http.services.radarr.loadbalancer.server.port=7878

  buildarr:
    image: callum027/buildarr:latest
    container_name: buildarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    restart: always
    volumes:
      - ./buildarr:/config:ro
    depends_on:
      - radarr

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./jackett:/config
      - ${DATA_ROOT}/torrents/watch:/data/torrents/watch
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.jackett.rule=Host(`$TAILSCALE_HOSTNAME`) && PathPrefix(`/jackett`)
      - traefik.http.routers.jackett.tls.certresolver=mytailscale
      - traefik.http.services.jackett.loadbalancer.server.port=9117

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - .jellyfin:/config
      - ${DATA_ROOT}/media:/data/media
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.jackett.rule=Host(`$PUBLIC_HOSTNAME`)
      - traefik.http.routers.jackett.tls.certresolver=myresolver
      - traefik.http.services.jackett.loadbalancer.server.port=9117
